{"version":3,"sources":["utils/duration/index.js","pomodoro/ProgressView.js","pomodoro/DurationControl.js","pomodoro/Pomodoro.js","utils/class-names/index.js","utils/useInterval/index.js","App.js","index.js"],"names":["secondsToDuration","givenSeconds","minutes","Math","floor","toString","padStart","seconds","round","ProgressView","session","focusDuration","breakDuration","isTimerRunning","progress","label","timeRemaining","className","data-testid","displayProperDuration","displayPaused","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","DurationControl","setBreakDuration","setFocusDuration","type","onClick","click","newFocusDuration","disabled","newBreakDuration","nextTick","prevState","max","Pomodoro","classNameToBoolean","useState","setIsTimerRunning","setSession","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","Audio","play","currentSession","nextSession","aria-label","title","nextState","prevStateSession","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ae2960c.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  if (givenSeconds === 3600) { \n    return `60:00`\n  };\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\r\nimport {secondsToDuration} from \"../utils/duration\";\r\n\r\nfunction ProgressView( {session, focusDuration, breakDuration, isTimerRunning } ) {\r\n\r\n    const displayProperDuration = (session) => {\r\n        if (session.label === \"Focusing\"){\r\n            return secondsToDuration(focusDuration);\r\n        } else {\r\n            return secondsToDuration(breakDuration);\r\n        }\r\n    }\r\n\r\n    const displayPaused = (isTimerRunning) => {\r\n        if (!isTimerRunning){\r\n            return 'PAUSED';\r\n        }\r\n    }\r\n\r\n    const progress = (session) => {\r\n        if (session.label === \"Focusing\"){\r\n            return ((focusDuration - session.timeRemaining) / focusDuration) * 100\r\n        }\r\n        if (session.label === \"On Break\"){\r\n            return ((breakDuration - session.timeRemaining) / breakDuration) * 100\r\n        }\r\n    }\r\n\r\n    if (session === null) {\r\n        return [];\r\n    } else {\r\n        return (\r\n        <div>\r\n            <div className=\"row mb-2\">\r\n            <div className=\"col\">\r\n                <h2 data-testid=\"session-title\">\r\n                {session?.label} for {displayProperDuration(session)} minutes\r\n                </h2>\r\n                <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                {secondsToDuration(session?.timeRemaining)} remaining\r\n                </p>\r\n            </div>\r\n            </div>\r\n            <h2>{displayPaused(isTimerRunning)}</h2>\r\n            <div className=\"row mb-2\">\r\n            <div className=\"col\">\r\n                <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                <div\r\n                    className=\"progress-bar\"\r\n                    role=\"progressbar\"\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                    aria-valuenow={progress(session)} \r\n                    style={{ width: `${progress(session)}%` }}\r\n                />\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ProgressView;","import React from \"react\";\r\nimport {secondsToDuration} from \"../utils/duration\";\r\n\r\nconst DurationControl = ( { session, focusDuration, breakDuration, setBreakDuration, setFocusDuration }) => {\r\n\r\n    const handleFocusIncrease = (click) => {\r\n        const newFocusDuration = focusDuration + 300;\r\n        if (newFocusDuration >= 3600){\r\n          setFocusDuration(3600);\r\n        } else {\r\n          setFocusDuration(newFocusDuration);\r\n        }\r\n      }\r\n      const handleFocusDecrease = (click) => {\r\n        const newFocusDuration = focusDuration - 300;\r\n        if (newFocusDuration < 300){\r\n          setFocusDuration(300);\r\n        } else {\r\n          setFocusDuration(newFocusDuration);\r\n        }\r\n      }\r\n      const handleBreakIncrease = (click) => {\r\n        const newBreakDuration = breakDuration + 60;\r\n        if (newBreakDuration > 900){\r\n          setBreakDuration(900);\r\n        } else {\r\n          setBreakDuration(newBreakDuration);\r\n        }\r\n      }\r\n      const handleBreakDecrease = (click) => {\r\n        const newBreakDuration = breakDuration - 60;\r\n        if (newBreakDuration < 60){\r\n          setBreakDuration(60);\r\n        } else {\r\n          setBreakDuration(newBreakDuration);\r\n        }\r\n      }\r\n\r\n\r\n      return (\r\n          <>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n                <div className=\"input-group input-group-lg mb-2\">\r\n                <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n                Focus Duration: {secondsToDuration(focusDuration)}\r\n                </span>\r\n                <div className=\"input-group-append\">\r\n                <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"decrease-focus\"\r\n                onClick={handleFocusDecrease}\r\n                disabled={session}\r\n                >\r\n                <span className=\"oi oi-minus\" />\r\n                </button>\r\n                <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"increase-focus\"\r\n                onClick={handleFocusIncrease}\r\n                disabled={session}\r\n                >\r\n                <span className=\"oi oi-plus\" />\r\n                </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <div className=\"input-group input-group-lg mb-2\">\r\n                <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n                Break Duration: {secondsToDuration(breakDuration)}\r\n                </span>\r\n                <div className=\"input-group-append\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-testid=\"decrease-break\"\r\n                  onClick={handleBreakDecrease}\r\n                  disabled={session}\r\n                >\r\n                  <span className=\"oi oi-minus\" />\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-testid=\"increase-break\"\r\n                  onClick={handleBreakIncrease}\r\n                  disabled={session}\r\n                >\r\n                  <span className=\"oi oi-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n    );\r\n}\r\n\r\n\r\nexport default DurationControl;","import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport ProgressView from \"./ProgressView\";\nimport DurationControl from \"./DurationControl\";\n\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [session, setSession] = useState(null);\n  const [focusDuration, setFocusDuration] = useState(1500);\n  const [breakDuration, setBreakDuration] = useState(300);\n  \n\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n  \n  const handleStop = (click) => {\n    setIsTimerRunning(false);\n    setSession(null);\n    setFocusDuration(1500);\n    setBreakDuration(300);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <DurationControl \n      session={session}\n      focusDuration={focusDuration}\n      breakDuration={breakDuration}\n      setBreakDuration={setBreakDuration}\n      setFocusDuration={setFocusDuration}\n      />\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              disabled={!session}\n              onClick={handleStop}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <ProgressView \n      session={session} \n      focusDuration={focusDuration} \n      breakDuration={breakDuration} \n      isTimerRunning={isTimerRunning}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}